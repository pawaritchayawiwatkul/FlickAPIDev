# Generated by Django 4.2.13 on 2025-02-05 16:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import student.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('teacher', '0001_initial'),
        ('school', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('registered_date', models.DateField(auto_now_add=True)),
                ('exp_date', models.DateField(null=True)),
                ('finised_date', models.DateField(blank=True, null=True)),
                ('lessons_left', models.IntegerField(default=0)),
                ('student_favorite', models.BooleanField(default=False)),
                ('teacher_favorite', models.BooleanField(default=False)),
                ('paid_price', models.FloatField(null=True)),
                ('discount', models.FloatField(null=True)),
                ('payment_slip', models.FileField(blank=True, null=True, upload_to=student.models.file_generate_upload_path)),
                ('payment_status', models.CharField(choices=[('confirm', 'Confirm'), ('waiting', 'Waiting'), ('denied', 'Denied')], default='waiting', max_length=10)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='registration', to='school.course')),
            ],
        ),
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.CharField(blank=True, max_length=300)),
                ('name', models.CharField(max_length=300)),
                ('email', models.CharField(blank=True, max_length=300)),
                ('datetime', models.DateTimeField()),
                ('duration', models.IntegerField()),
                ('code', models.CharField(max_length=12, unique=True)),
                ('notified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ManyToManyField(related_name='student', through='student.CourseRegistration', to='school.course')),
                ('school', models.ManyToManyField(related_name='student', to='school.school')),
            ],
        ),
        migrations.CreateModel(
            name='StudentTeacherRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('favorite_teacher', models.BooleanField(default=False)),
                ('favorite_student', models.BooleanField(default=False)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_relation', to='student.student')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_relation', to='teacher.teacher')),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='teacher',
            field=models.ManyToManyField(related_name='student', through='student.StudentTeacherRelation', to='teacher.teacher'),
        ),
        migrations.AddField(
            model_name='student',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='courseregistration',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registration', to='student.student'),
        ),
        migrations.AddField(
            model_name='courseregistration',
            name='teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registration', to='teacher.teacher'),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=12, unique=True)),
                ('user_type', models.CharField(choices=[('student', 'Student'), ('guest', 'Guest')], default='student', max_length=10)),
                ('booked_datetime', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('COM', 'Completed'), ('CAN', 'Canceled')], default='COM', max_length=10)),
                ('check_in', models.TimeField(blank=True, null=True)),
                ('check_out', models.TimeField(blank=True, null=True)),
                ('guest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='booking', to='student.guest')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booking', to='teacher.lesson')),
                ('registration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='booking', to='student.courseregistration')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='booking', to='student.student')),
            ],
        ),
    ]
